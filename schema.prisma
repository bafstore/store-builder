generator client {
  provider = "prisma-client-js"
}
 
datasource db {
  provider = "postgresql"
  // Uses connection pooling
  url = env("POSTGRES_PRISMA_URL")
  // Uses direct connection, ⚠️ make sure to keep this to `POSTGRES_URL_NON_POOLING`
  // or you'll have dangling databases from migrations
  directUrl = env("POSTGRES_URL_NON_POOLING")
}
 
model User {
  id            String    @id @default(uuid())
  name          String
  email         String    @unique
  role          String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  phoneNumber   String?
  lastSignInAt  DateTime?
  stores        Store[]
}

model Store {
  id            String    @id @default(uuid())
  name          String    
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  user          User      @relation(fields: [userId], references: [id])
  userId        String
  products      Product[]
  orders        Order[]
  categories    Category[]
  isDeleted     Boolean   @default(false) 
  
  @@unique([name, isDeleted])
}

model Product {
  id            String    @id @default(uuid())
  name          String
  price         Float
  stock         Int       @default(0)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  store         Store     @relation(fields: [storeId], references: [id])
  storeId       String
  orders        ProductOrder[]
  categories    Category[]
}

model Customer {
  id            String    @id @default(uuid())
  name          String
  email         String?   @unique
  phoneNumber   String    @unique
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  address       String
  orders        Order[]
}

model Order {
  id            String    @id @default(uuid())
  total         Float
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  customer      Customer  @relation(fields: [customerId], references: [id])
  customerId    String
  products      ProductOrder[]
  status        String
  store         Store     @relation(fields: [storeId], references: [id])
  storeId       String
}

model ProductOrder {
  id            String    @id @default(uuid())
  quantity      Int
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  product       Product   @relation(fields: [productId], references: [id])
  productId     String
  order         Order     @relation(fields: [orderId], references: [id])
  orderId       String
}

model Category {
  id            String    @id @default(uuid())
  name          String    
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  products      Product[]
  store         Store     @relation(fields: [storeId], references: [id])
  storeId       String
  
  @@unique([name, storeId])
}
